[{"/Users/lion/Desktop/WeasleyClockV2/weasley_clock_v2/src/index.js":"1","/Users/lion/Desktop/WeasleyClockV2/weasley_clock_v2/src/reportWebVitals.js":"2","/Users/lion/Desktop/WeasleyClockV2/weasley_clock_v2/src/App.tsx":"3","/Users/lion/Desktop/WeasleyClockV2/weasley_clock_v2/src/MainPage.tsx":"4","/Users/lion/Desktop/WeasleyClockV2/weasley_clock_v2/src/Clock.tsx":"5","/Users/lion/Desktop/WeasleyClockV2/weasley_clock_v2/src/NavPanel.tsx":"6","/Users/lion/Desktop/WeasleyClockV2/weasley_clock_v2/src/ToolPanel.tsx":"7","/Users/lion/Desktop/WeasleyClockV2/weasley_clock_v2/src/Locations.tsx":"8","/Users/lion/Desktop/WeasleyClockV2/weasley_clock_v2/src/Friends.tsx":"9","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/index.js":"10","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/reportWebVitals.js":"11","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/App.tsx":"12","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/MainPage.tsx":"13","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/Clock.tsx":"14","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/NavPanel.tsx":"15","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/ToolPanel.tsx":"16","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/Friends.tsx":"17","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/Locations.tsx":"18","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/Login.tsx":"19","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/ActivityFeed.tsx":"20","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Bellatrix.tsx":"21","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/DeathEaters.tsx":"22","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/component-styles.ts":"23","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Dumbeldore.tsx":"24","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Dumbeldore2.tsx":"25","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Fleur.tsx":"26","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Ginny.tsx":"27","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Harry.tsx":"28","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Hermione.tsx":"29","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Krum.tsx":"30","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Longbottom.tsx":"31","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Luna.tsx":"32","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Malfoy.tsx":"33","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Minerva.tsx":"34","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Narcissa.tsx":"35","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Ron.tsx":"36","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Sirius.tsx":"37","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Slughorn.tsx":"38","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Snape.tsx":"39","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Voldemort.tsx":"40","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/ClockLabels.tsx":"41"},{"size":500,"mtime":1611325929195,"results":"42","hashOfConfig":"43"},{"size":362,"mtime":1611325929196,"results":"44","hashOfConfig":"43"},{"size":224,"mtime":1611331305759,"results":"45","hashOfConfig":"43"},{"size":3006,"mtime":1611950142337,"results":"46","hashOfConfig":"43"},{"size":3621,"mtime":1611948888347,"results":"47","hashOfConfig":"43"},{"size":885,"mtime":1611595867916,"results":"48","hashOfConfig":"43"},{"size":1597,"mtime":1611950277372,"results":"49","hashOfConfig":"43"},{"size":4441,"mtime":1611960200900,"results":"50","hashOfConfig":"43"},{"size":3966,"mtime":1611967307853,"results":"51","hashOfConfig":"43"},{"size":500,"mtime":1614289548169,"results":"52","hashOfConfig":"53"},{"size":362,"mtime":1614289548170,"results":"54","hashOfConfig":"53"},{"size":1158,"mtime":1618516573056,"results":"55","hashOfConfig":"53"},{"size":6909,"mtime":1621293291299,"results":"56","hashOfConfig":"53"},{"size":6088,"mtime":1621295857216,"results":"57","hashOfConfig":"53"},{"size":808,"mtime":1618981958999,"results":"58","hashOfConfig":"53"},{"size":2080,"mtime":1619972508946,"results":"59","hashOfConfig":"53"},{"size":7768,"mtime":1619972560033,"results":"60","hashOfConfig":"53"},{"size":10446,"mtime":1619535252129,"results":"61","hashOfConfig":"53"},{"size":3296,"mtime":1619972535273,"results":"62","hashOfConfig":"53"},{"size":5748,"mtime":1621296313067,"results":"63","hashOfConfig":"53"},{"size":1859,"mtime":1620823108444,"results":"64","hashOfConfig":"53"},{"size":2501,"mtime":1620823799513,"results":"65","hashOfConfig":"53"},{"size":439,"mtime":1621297414603,"results":"66","hashOfConfig":"53"},{"size":2169,"mtime":1620823788063,"results":"67","hashOfConfig":"53"},{"size":2321,"mtime":1620823864880,"results":"68","hashOfConfig":"53"},{"size":2318,"mtime":1620824145240,"results":"69","hashOfConfig":"53"},{"size":1400,"mtime":1620824386085,"results":"70","hashOfConfig":"53"},{"size":1531,"mtime":1620824551513,"results":"71","hashOfConfig":"53"},{"size":1938,"mtime":1620824899016,"results":"72","hashOfConfig":"53"},{"size":1399,"mtime":1620824946345,"results":"73","hashOfConfig":"53"},{"size":1147,"mtime":1620825226044,"results":"74","hashOfConfig":"53"},{"size":1379,"mtime":1620825325047,"results":"75","hashOfConfig":"53"},{"size":1180,"mtime":1620825590680,"results":"76","hashOfConfig":"53"},{"size":1677,"mtime":1620825841295,"results":"77","hashOfConfig":"53"},{"size":1468,"mtime":1620825912770,"results":"78","hashOfConfig":"53"},{"size":1193,"mtime":1620826046065,"results":"79","hashOfConfig":"53"},{"size":911,"mtime":1620826189830,"results":"80","hashOfConfig":"53"},{"size":1654,"mtime":1620826292483,"results":"81","hashOfConfig":"53"},{"size":1233,"mtime":1620826401268,"results":"82","hashOfConfig":"53"},{"size":1631,"mtime":1620826508131,"results":"83","hashOfConfig":"53"},{"size":3960,"mtime":1621296233873,"results":"84","hashOfConfig":"53"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"1omm3ui",{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"19xglxu",{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"112"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"112"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"112"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"/Users/lion/Desktop/WeasleyClockV2/weasley_clock_v2/src/index.js",[],["174","175"],"/Users/lion/Desktop/WeasleyClockV2/weasley_clock_v2/src/reportWebVitals.js",[],"/Users/lion/Desktop/WeasleyClockV2/weasley_clock_v2/src/App.tsx",[],["176","177"],"/Users/lion/Desktop/WeasleyClockV2/weasley_clock_v2/src/MainPage.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/weasley_clock_v2/src/Clock.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/weasley_clock_v2/src/NavPanel.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/weasley_clock_v2/src/ToolPanel.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/weasley_clock_v2/src/Locations.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/weasley_clock_v2/src/Friends.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/index.js",[],["178","179"],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/reportWebVitals.js",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/App.tsx",[],["180","181"],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/MainPage.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/Clock.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/NavPanel.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/ToolPanel.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/Friends.tsx",["182"],"import React, { useState, useEffect } from \"react\";\nimport { useQuery, gql, useMutation } from \"@apollo/client\";\nimport styled from \"styled-components\";\nimport { User } from \"./MainPage\";\n\n// TODO - Display pending friends in different color on top\ninterface friendsProps {\n  userName: string | null;\n  friends: User[];\n  pendingFriends: User[];\n  setPendingFriends: React.Dispatch<React.SetStateAction<User[]>>;\n}\n\n// interface AllUsersData {\n//   allUsers: User[];\n// }\n\ninterface NotFriendsData {\n  userNotFriends: User[];\n}\n\nclass CreateFriendRequestInput {\n  recipient: number;\n  constructor(recipient: number) {\n    this.recipient = recipient;\n  }\n}\n\n//GQL QUERY/MUTATION\n// const GET_ALL_USERS = gql`\n//   query AllUsers {\n//     allUsers {\n//       name\n//     }\n//   }\n// `;\n\nconst GET_NOT_FRIENDS = gql`\n  query UserNotFriends {\n    userNotFriends {\n      name\n      id\n    }\n  }\n`;\n\n// const UPDATE_FRIEND_REQUEST = gql`\n//   mutation updateFriendRequest($id:Number!, $status:String!){\n//     updateFriendRequest(id: $id, status: $status ){\n//       id\n//       recipient{name}\n//       status\n//     }\n//   }\n// `;\n\nconst CREATE_FRIEND_REQUEST = gql`\n  mutation createFriendRequest($createFriendRequestInput: CreateFriendRequestInput!) {\n    createFriendRequest(createFriendRequestInput: $createFriendRequestInput) {\n      createdBy {\n        name\n      }\n      recipient {\n        name\n      }\n    }\n  }\n`;\n//GQL QUERY/MUTATION\n\nconst Friends: React.FC<friendsProps> = (props) => {\n  const [newFriend, setNewFriend] = useState<User>();\n  const [oldFriend, setOldFriend] = useState(\"\");\n  const [notFriends, setNotFriends] = useState<User[]>([]);\n  const [popupRemove, setPopupRemove] = useState(false);\n  const [popupAdd, setPopupAdd] = useState(false);\n  const { friends, pendingFriends, setPendingFriends } = props;\n\n  // GQL Query/Mutations\n  // const { loading: usersLoading, data: usersData } = useQuery<AllUsersData>(\n  //   GET_ALL_USERS\n  // );\n  const {\n    loading: notFriendsLoading,\n    data: notFriendsData,\n  } = useQuery<NotFriendsData>(GET_NOT_FRIENDS);\n  console.log(\"Loading NotFriends: \", notFriendsLoading);\n  const [createFriendRequest, { data: createFriendData }] = useMutation(\n    CREATE_FRIEND_REQUEST\n  );\n  // GQL Query/Mutations\n\n  useEffect(() => {\n    if (notFriendsData) {\n      // console.log(\n      //   \"this is usersData in FriendsCompnent UseEffect: \",\n      //   notFriendsData\n      // );\n      setNotFriends(notFriendsData.userNotFriends);\n    }\n  }, [notFriendsData]);\n\n\n  const createAddWarning: React.ReactEventHandler<HTMLSelectElement> = (\n    e: React.MouseEvent<HTMLSelectElement, MouseEvent>\n  ) => {\n    // Grab\n    console.log(\"this is event\", (e.target as HTMLSelectElement).value);\n    for (let i = 0; i < notFriends.length; i++) {\n      if (notFriends[i].id === Number.parseInt((e.target as HTMLSelectElement).value)) {\n        console.log('notFriends[i]: ', notFriends[i])\n        const friendObj: User = notFriends[i];\n        console.log('friendObj in add: ', friendObj)\n        setNewFriend(friendObj);\n        break;\n      }\n    }\n    setPopupAdd(true);\n  };\n\n  const addFriend: React.MouseEventHandler<HTMLButtonElement> = async () => {\n    // Update DB\n    if (newFriend) {\n      const createFriendRequestInput = new CreateFriendRequestInput(\n        newFriend.id\n      );\n\n      console.log(\n        \"this is createFriendRequestInput: \",\n        createFriendRequestInput\n      );\n\n      const res = await createFriendRequest({\n        variables: { createFriendRequestInput: createFriendRequestInput },\n      });\n      if (res) { \n        setPendingFriends([...friends, newFriend]);\n        alert(`Request Sent to ${newFriend.name}`);\n        setPopupAdd(false);\n      } else {console.error('Failed to Add Friend')}\n    } else {\n      console.error(\"No New Friend Found\");\n    }\n  };\n\n  const removeFriend: React.MouseEventHandler<HTMLButtonElement> = async () => {\n    // TODO - remove Friend handle in DB\n    // setFriends(friends.filter((friend: string) => friend !== oldFriend));\n    setPopupRemove(false);\n    console.log(\"Friend Removed\");\n  };\n\n  const createRemoveWarning: React.MouseEventHandler<HTMLLIElement> = (\n    e: React.MouseEvent<HTMLLIElement, MouseEvent>\n  ) => {\n    // console.log((e.target as HTMLLIElement).getAttribute(\"value\"), \"value\");\n    const oldFriendString = (e.target as HTMLLIElement).getAttribute(\"value\");\n    if (typeof oldFriendString === \"string\") {\n      setOldFriend(oldFriendString);\n    } else {\n      console.error(\"Could Not Find Friend Element\");\n    }\n    setPopupRemove(true);\n  };\n\n  const DropDown = (): JSX.Element => {\n    const createOptions = () => {\n      return notFriends.map((friend) => {\n        return (\n          <Option key={friend.name} value={friend.id}>\n            {friend.name}\n          </Option>\n        );\n      });\n    };\n\n    // console.log('these are createOptions', createOptions())\n\n    return (\n      <Select onChange={createAddWarning}>\n        <Option key=\"DefaultOption\">Add New Friend</Option>\n        {createOptions()}\n      </Select>\n    );\n  };\n\n  const PendingFriendsList = (): JSX.Element => {\n    return (\n      <ul>\n        <p>Pending Friends</p>\n        {pendingFriends.map((friend: User) => (\n          <li key={friend.id} value={friend.name} color={\"blue\"}>\n            {friend.name}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  const FriendsList = (): JSX.Element => {\n    return (\n      <ul>\n        {DropDown()}\n        {friends.map((friend: User) => (\n          <li key={friend.id} value={friend.name} onClick={createRemoveWarning}>\n            {friend.name}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  const renderFriendsTool = (): JSX.Element => {\n    if (popupRemove) {\n      return (\n        <FriendsContainer>\n        <Popup>\n          <PopupText>Are You Sure You Want to to remove {oldFriend}?</PopupText>\n          <PopupButton onClick={removeFriend}>Remove</PopupButton>\n          <PopupButton onClick={() => setPopupRemove(false)}>\n            Cancel\n          </PopupButton>\n          </Popup>\n        </FriendsContainer>\n      );\n    }\n    if (popupAdd) {\n      return (\n        <FriendsContainer>\n        <Popup>\n          <PopupText>\n            Are You Sure You Want to to add {newFriend?.name} as a friend?\n          </PopupText>\n          <PopupButton onClick={addFriend}>Add</PopupButton>\n          <PopupButton onClick={() => setPopupAdd(false)}>Cancel</PopupButton>\n          </Popup>\n        </FriendsContainer>\n      );\n    } else {\n      return (\n        <FriendsContainer>\n          <PendingFriendsList />  \n          <FriendsList />\n        </FriendsContainer>\n      )\n    }\n  };\n\n  return (\n    <FriendsMain>\n      <FriendsTitle>Friends</FriendsTitle>\n      <FriendsContainer>{renderFriendsTool()}</FriendsContainer>\n    </FriendsMain>\n  );\n};\n\nconst FriendsMain = styled.div`\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  /* border: 2px solid yellow; */\n`;\n\nconst FriendsTitle = styled.h2`\n  flex: 1;\n  /* border: 2px solid purple; */\n  width: 100%;\n  border-bottom: 1px solid tan;\n`;\n\nconst FriendsContainer = styled.div`\n  flex: 9;\n  /* border: 2px solid teal; */\n  width: 100%;\n  & ul {\n    list-style: none;\n    padding: 0;\n\n    & li {\n      cursor: pointer;\n      /* border: 2px solid black; */\n    }\n  }\n`;\n\nconst Select = styled.select`\n  background-color: transparent;\n  border: none;\n  font-family: inherit;\n  font-size: inherit;\n  color: inherit;\n  appearance: none;\n`;\nconst Option = styled.option`\n  background-color: inherit;\n  font-family: inherit;\n`;\n\nconst Popup = styled.div``;\nconst PopupText = styled.div``;\nconst PopupButton = styled.button``;\n\nexport default Friends;\n","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/Locations.tsx",["183","184","185","186"],"import React, { useEffect, useState } from \"react\";\nimport { useMutation, gql, useQuery } from \"@apollo/client\";\nimport styled from \"styled-components\";\nimport { Location } from \"./MainPage\";\n\ninterface LocationData {\n  allLocations: Location[];\n}\n\ninterface LocationResData {\n  data?: {\n    createLocation: Location;\n  };\n}\ninterface UserResData {\n  data?: {\n    currentLocation?: Location;\n    locations?: Location[];\n  };\n}\n\n// class Foo {\n//   name?: string;\n//   age?: number;\n\n//   constructor(args: { name?: string; age?: number } = {}) {\n//     this.name = args.name;\n//     this.age = args.age;\n//   }\n// }\n\n\ninterface UpdateUserConstructor{\n  locations?: number[];\n  currentLocation?: number;\n}\n\nclass UpdateUserInput {\n  locations?: number[];\n  currentLocation?: number;\n\n  constructor(\n    updateUserConstructor: UpdateUserConstructor\n  ) {\n    if (updateUserConstructor.locations) {\n      this.locations = updateUserConstructor.locations;\n    }\n    if (updateUserConstructor.currentLocation) {\n      this.currentLocation = updateUserConstructor.currentLocation;\n    }\n  }\n}\n\nclass CreateLocationInput {\n  name: string;\n  constructor({ name }: { name: string }) {\n    this.name = name;\n  }\n}\n\n// GQL Queries\n// updateUser mutation to add new location to user.locations or to update user.currentLocations\nconst UPDATE_USER = gql`\n  mutation updateUser($locations: [Int!], $currentLocation: Int) {\n    updateUser(locations: $locations, currentLocation: $currentLocation) {\n      locations {\n        name\n      }\n      currentLocation {\n        name\n      }\n    }\n  }\n`;\n\nconst CREATE_LOCATION = gql`\n  mutation createLocation($createLocationInput: CreateLocationInput!) {\n    createLocation(createLocationInput: $createLocationInput) {\n      id\n      name\n    }\n  }\n`;\n\nconst getLocations = gql`\n  query GetAllLocations {\n    allLocations {\n      id\n      name\n    }\n  }\n`;\n// createLocation mutation to create new location (also calls updateUser)\n// GQL Queries\n\ninterface locationProps {\n  locations: Location[];\n  setLocations: React.Dispatch<React.SetStateAction<Location[]>>;\n  currentLocation: Location;\n  setCurrentLocation: React.Dispatch<React.SetStateAction<Location>>;\n}\n\nconst Locations: React.FC<locationProps> = (props) => {\n  const {\n    locations,\n    setLocations,\n    currentLocation,\n    setCurrentLocation,\n  } = props;\n  const [newLocationName, setNewLocationName] = useState<string>(\"\");\n  const [selectedLocation, setSelectedLocation] = useState<Location | null>();\n  const [currentPopup, setCurrentPopup] = useState(false);\n  const [popup, setPopup] = useState(false);\n  const [updateUser, { data: updateUserData }] = useMutation(UPDATE_USER);\n  const [createLocation, { data: createLocationData }] = useMutation(\n    CREATE_LOCATION\n  );\n  const [allLocations, setAllLocations] = useState<Location[]>([]);\n  const {\n    loading: locationLoading,\n    data: locationData,\n  } = useQuery<LocationData>(getLocations);\n\n  useEffect(() => {\n    if (locationData?.allLocations) {\n      setAllLocations(locationData.allLocations);\n      console.log(\n        \"this should be locations from db\",\n        locationData.allLocations\n      );\n    }\n  }, [locationData?.allLocations]);\n\n  // TODO add location when you press enter\n  const addLocation: React.MouseEventHandler<HTMLInputElement> = async () => {\n    let locationRes: LocationResData;\n    let createLocationInput: CreateLocationInput;\n    if (newLocationName !== \"\") {\n      createLocationInput = new CreateLocationInput({ name: newLocationName });\n      locationRes = await createLocation({\n        variables: { createLocationInput },\n      });\n      if (locationRes.data) {\n        // use newLocation to createLocation, grab location.id and add to newLocations array, then update user\n        console.log(\"this is locationRes.data: \", locationRes.data);\n        const addLocation = new Location(\n          locationRes.data.createLocation.id,\n          locationRes.data.createLocation.name\n        );\n        const updatedLocations = [...locations, addLocation];\n        const locationIds: number[] = updatedLocations.map(\n          (location) => location.id\n        );\n        const updateUserInput = new UpdateUserInput({locations: locationIds});\n        const userRes: UserResData = await updateUser({\n          variables: { updateUserInput },\n        });\n        if (userRes.data) {\n          //TODO - Probably should actually use data from userRes.data\n          setLocations(updatedLocations);\n          setNewLocationName(\"\");\n        } else {\n          console.error(\"Update User Locations in DB Failed\");\n        }\n      } else {\n        console.error(\"Add Location to DB Failed\");\n      }\n    }\n  };\n\n  const removeLocation = () => {\n    if (selectedLocation) {\n      console.log(\"removeLocation\");\n      console.log(\"selectedLocation\", selectedLocation);\n      console.log(\n        locations.filter((location) => location.id !== selectedLocation.id)\n      );\n      setLocations(\n        locations.filter((location) => location.id !== selectedLocation.id)\n      );\n      setPopup(false);\n    }\n  };\n\n  // TODO - this doesn't need to grab value since I already set selectedLocation\n  const updateLocation: React.MouseEventHandler<HTMLButtonElement> = async (\n    e: React.MouseEvent\n  ) => {\n    const locationId: number = Number.parseInt(\n      (e.target as HTMLButtonElement).value\n    );\n    console.log(\"updateLocation\", locationId);\n    const updateUserInput = new UpdateUserInput({currentLocation: locationId })\n    const res: UserResData = await updateUser({\n      variables: updateUserInput,\n    });\n    if (res.data?.currentLocation) {\n      console.log(\"this is res in updateLocation useMutation: \", res.data);\n      setCurrentLocation(res.data.currentLocation);\n      setPopup(false);\n    }\n  };\n\n  const removeCurrentLocation = (e: any) => {\n    removeLocation();\n    updateLocation(e);\n  };\n\n  const createPopup: React.MouseEventHandler<HTMLLIElement> = (e: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\n    const locationString: string | null = (e.target as HTMLLIElement).getAttribute(\n      \"value\"\n    );\n    if (locationString) {\n      const locationId = Number.parseInt(locationString);\n      const locationObj = locations.find(location => location.id === locationId)\n      setSelectedLocation(locationObj)\n      setPopup(true);\n    } else {console.error('Could not find Location ID to Add Location')}\n  };\n\n  const removeOptions = () => {\n    return (\n      <Select onChange={removeCurrentLocation}>\n        {locations.map((location) => (\n          <option key={location.id} value={location.id}>\n            {location.name}\n          </option>\n        ))}\n      </Select>\n    );\n  };\n  // TODO - Add Types to All Elements\n  const renderCurrentPopup = (): JSX.Element => {\n    return (\n      <PopupContainer>\n        <PopupText>\n          You are trying to remove the current location. Where are you now?\n        </PopupText>\n        {removeOptions()}\n      </PopupContainer>\n    );\n  };\n\n  const renderPopup = (): JSX.Element => {\n    if (selectedLocation) {\n      return (\n        <PopupContainer>\n          <PopupText>\n            What do you want to do to the location \"{selectedLocation.name}\"\n          </PopupText>\n          <PopupButton onClick={updateLocation} value={selectedLocation.id}>\n            Update\n          </PopupButton>\n          <PopupButton onClick={removeLocation}>Remove</PopupButton>\n        </PopupContainer>\n      );\n    } else {\n      throw new Error(\"Could Not Locate Selected Location\");\n    }\n  };\n\n  const LocationItems = (): JSX.Element => {\n    const notCurrent = locations.filter(\n      (location) => location.name !== currentLocation.name\n    );\n    const createCurrentPopup = (e: any) => {\n      let value = e.target.getAttribute(\"value\");\n      console.log(\"value\", value);\n      setSelectedLocation(e.target.getAttribute(\"value\"));\n      setCurrentPopup(true);\n    };\n\n    // Return a list of all locations, currentLocation will always be top because it has a different popup for removing\n    return (\n      <ul>\n        <li\n          key={currentLocation.id}\n          value={currentLocation.id}\n          onClick={createCurrentPopup}\n        >\n          {currentLocation.name}\n        </li>\n        {notCurrent.map((location) => (\n          <li key={location.id} value={location.id} onClick={createPopup}>\n            {location.name}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  const handleLocationInput: React.ChangeEventHandler<HTMLInputElement> = async (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const locationName: string = (e.target as HTMLInputElement).value;\n    setNewLocationName(locationName);\n  };\n\n  const newLocationInput = () => {\n    return (\n      <Input\n        key=\"newLocation\"\n        type=\"text\"\n        value={newLocationName}\n        onChange={handleLocationInput}\n        onClick={addLocation}\n        placeholder=\"Add Location\"\n      />\n    );\n  };\n\n  const renderLocationsTool = () => {\n    if (popup) {\n      return <PopupContainer>{renderPopup()}</PopupContainer>;\n    }\n    if (currentPopup) {\n      return <PopupContainer>{renderCurrentPopup()}</PopupContainer>;\n    } else {\n      return (\n        <LocationsList>\n          {newLocationInput()}\n          <LocationItems />\n        </LocationsList>\n      );\n    }\n  };\n\n  return (\n    <LocationsMain>\n      <LocationsTitle>Locations</LocationsTitle>\n      {renderLocationsTool()}\n    </LocationsMain>\n  );\n};\n\nconst LocationsMain = styled.div`\n  /* border: 2px solid crimson; */\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\nconst LocationsTitle = styled.h2`\n  border-bottom: 1px solid tan;\n  flex: 1;\n`;\n\nconst LocationsList = styled.div`\n  flex: 9;\n  & :focus {\n    outline: none;\n  }\n\n  & ul {\n    /* border: 2px solid blue; */\n    padding: 0;\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n\n    & li {\n      /* border: 2px solid yellow; */\n      text-align: center;\n      width: 80%;\n      margin: auto;\n      cursor: pointer;\n    }\n  }\n`;\n\nconst Input = styled.input`\n  border: none;\n  /* border: 2px solid green; */\n  background-color: transparent;\n  font-size: inherit;\n  text-align: center;\n  &&::placeholder {\n    color: #ede0d4;\n    font-family: \"Luminari\";\n  }\n`;\n\nconst PopupContainer = styled.div``;\n\nconst PopupText = styled.div``;\nconst PopupButton = styled.button``;\nconst Select = styled.select``;\n\nexport default Locations;\n","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/Login.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/ActivityFeed.tsx",["187","188"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { User } from \"./MainPage\";\n\n\n// TODO - Do I need to issue separate requests for pending and accepted so I don't return currentLocation for pending request\n\ninterface ActivityFeedProps {\n  pendingFriends: User[];\n  friends: User[];\n  setFriends: React.Dispatch<React.SetStateAction<User[]>>;\n  setPendingFriends: React.Dispatch<React.SetStateAction<User[]>>;\n}\n\nclass UpdateFriendRequestInput {\n  id: number;\n  status: \"accepted\" | \"rejected\";\n  constructor(id: number, status: \"accepted\" | \"rejected\") {\n    this.id = id;\n    this.status = status;\n  }\n}\n\nconst HANDLE_FRIEND_REQUEST = gql`\n  mutation UpdateFriendRequest($updateFriendRequestInput: UpdateFriendRequestInput!) {\n    updateFriendRequest(updateFriendRequestInput: $updateFriendRequestInput){\n      id\n      recipient{name}\n    }\n  }\n`;\n\nexport const ActivityFeed: React.FC<ActivityFeedProps> = (props) => {\n  const { pendingFriends, friends, setFriends, setPendingFriends } = props;\n  // TODO - should use data from res to update state\n  const [updateFriendRequest, { data: updateFriendRequestData }] = useMutation(HANDLE_FRIEND_REQUEST);\n  //TODO - accept/reject need to grab createdBy to update db\n\n  const acceptFriend: React.MouseEventHandler<HTMLButtonElement> = async (e: React.MouseEvent<HTMLButtonElement>) => {\n    // const updateFriendRequestInput = new UpdateFriendRequestInput()\n    console.log(\"you got a friend in me\", (e.target as HTMLButtonElement).value);\n    const friendId = Number.parseInt((e.target as HTMLButtonElement).value);\n    const updateFriendRequestInput = new UpdateFriendRequestInput(friendId, \"accepted\");\n    const res = await updateFriendRequest({ variables: { updateFriendRequestInput } })\n    let addFriend: User | undefined;\n    let updatedPendingFriends: User[] | undefined;\n    if (res) {\n      updatedPendingFriends = (pendingFriends.filter(friend => friend.id !== friendId))\n      addFriend = pendingFriends.find((friend) => friend.id === friendId);\n    }\n    if (addFriend && updatedPendingFriends) {\n      setFriends([...friends, addFriend])\n      setPendingFriends(updatedPendingFriends)\n      console.log('this is the new friend', addFriend)\n    } else { console.error('Cant Find Friend To Add')}\n  };\n\n  // TODO - additional popup to confirm rejecting friend since they can't invite again\n  const rejectFriend: React.MouseEventHandler<HTMLButtonElement> = async (e: React.MouseEvent<HTMLButtonElement>) => {\n    // const updateFriendRequestInput = new UpdateFriendRequestInput()\n    console.log(\"no new firends\", (e.target as HTMLButtonElement).value);\n    const friendId: number = Number.parseInt((e.target as HTMLButtonElement).value);\n\n    const updateFriendRequestInput = new UpdateFriendRequestInput(friendId, \"rejected\");\n    const res = await updateFriendRequest({ variables: { updateFriendRequestInput } })\n    let updatedFriends: User[] | undefined;\n    let updatedPendingFriends: User[] | undefined;\n    if (res) {\n      updatedFriends = pendingFriends.filter(\n       (friend) => friend.id === friendId\n     );\n      \n      updatedPendingFriends = pendingFriends.filter(\n       (friend) => friend.id !== friendId\n       );\n      }\n    if (updatedFriends && updatedPendingFriends) {\n      setFriends(updatedFriends);\n      setPendingFriends(updatedPendingFriends);\n    } else {\n      console.error(\"Cant Find Friend To Remove\");\n    }\n  };\n\n  const renderRequests = (): JSX.Element[] => {\n    const requestList = pendingFriends.map((req) => {\n      return (\n        <ItemBox>\n          <BoxRequestText>\n            {req.name} would like to be your friend\n          </BoxRequestText>\n          <AcceptButton onClick={acceptFriend} value={req.id}>Accept</AcceptButton>\n          <RejectButton onClick={rejectFriend} value={req.id}>Reject</RejectButton>\n        </ItemBox>\n      );\n    });\n    return requestList;\n  };\n\n  const renderUpdates = () => {\n\n  \n    const updateList = friends.map((friend) => {\n      return (\n        <ItemBox>\n          <BoxUpdateText>\n            Your Friend {friend.name} is at {friend.currentLocation.name}\n          </BoxUpdateText>\n        </ItemBox>\n      );\n    });\n    return updateList;\n  };\n\n  return (\n    <ActivityMain>\n      <ActivityHeader>Activity Feed</ActivityHeader>\n      <ActivityBody>\n        {renderRequests()}\n        {/* {renderUpdates()} */}\n      </ActivityBody>\n    </ActivityMain>\n  );\n};\n\nconst ActivityMain = styled.div`\n  /* border: 2px dashed black; */\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\nconst ActivityHeader = styled.h2`\n  border-bottom: 2px solid tan;\n  flex: 1;\n`;\nconst ActivityBody = styled.div`\n  /* border: 2px dashed orangered; */\n  flex: 9;\n  overflow: scroll;\n`;\n\nconst ItemBox = styled.div`\n  border: 2px solid tan;\n  border-radius: 10px;\n  box-shadow: 1px 1px 3px 3px tan;\n  display: grid;\n  margin: 5px;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n`;\n\nconst BoxRequestText = styled.div`\n  /* border: 2px dashed orange; */\n  grid-column: 1/-1;\n  grid-row: 1/2;\n`;\n\nconst BoxUpdateText = styled.div`\n  /* border: 2px dashed red; */\n  grid-column: 1/-1;\n  grid-row:1/-1;\n`;\n\nconst AcceptButton = styled.button`\n  font-family: inherit;\n  font-size: inherit;\n  color: #0e440e;\n  margin: 15px;\n  border: 2px solid tan;\n  box-shadow: 2px 2px 5px 5px tan;\n  background: none;\n  font-size: 2rem;\n  grid-column: 1/1;\n  grid-row: 2/-1;\n`;\nconst RejectButton = styled.button`\n  font-family: inherit;\n  font-size: inherit;\n  color: #ac0000;\n  margin: 15px;\n  border: 2px solid tan;\n  box-shadow: 2px 2px 5px 5px tan;\n  background: none;\n  font-size: 2rem;\n  grid-column: 2/-1;\n  grid-row: 2/-1;\n`;\n","/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Bellatrix.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/DeathEaters.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/component-styles.ts",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Dumbeldore.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Dumbeldore2.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Fleur.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Ginny.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Harry.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Hermione.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Krum.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Longbottom.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Luna.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Malfoy.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Minerva.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Narcissa.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Ron.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Sirius.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Slughorn.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Snape.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/wands/components/Voldemort.tsx",[],"/Users/lion/Desktop/WeasleyClockV2/March 20201/WeasleyClockv2/src/ClockLabels.tsx",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"189","replacedBy":"193"},{"ruleId":"191","replacedBy":"194"},{"ruleId":"189","replacedBy":"193"},{"ruleId":"191","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":88,"column":39,"nodeType":"197","messageId":"198","endLine":88,"endColumn":55},{"ruleId":"195","severity":1,"message":"199","line":114,"column":30,"nodeType":"197","messageId":"198","endLine":114,"endColumn":44},{"ruleId":"195","severity":1,"message":"200","line":115,"column":34,"nodeType":"197","messageId":"198","endLine":115,"endColumn":52},{"ruleId":"195","severity":1,"message":"201","line":118,"column":10,"nodeType":"197","messageId":"198","endLine":118,"endColumn":22},{"ruleId":"195","severity":1,"message":"202","line":120,"column":14,"nodeType":"197","messageId":"198","endLine":120,"endColumn":29},{"ruleId":"195","severity":1,"message":"203","line":37,"column":39,"nodeType":"197","messageId":"198","endLine":37,"endColumn":62},{"ruleId":"195","severity":1,"message":"204","line":101,"column":9,"nodeType":"197","messageId":"198","endLine":101,"endColumn":22},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],["205"],["206"],"@typescript-eslint/no-unused-vars","'createFriendData' is assigned a value but never used.","Identifier","unusedVar","'updateUserData' is assigned a value but never used.","'createLocationData' is assigned a value but never used.","'allLocations' is assigned a value but never used.","'locationLoading' is assigned a value but never used.","'updateFriendRequestData' is assigned a value but never used.","'renderUpdates' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]